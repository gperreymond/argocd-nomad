---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nomad-server
spec:
  selector:
    matchLabels:
      app: nomad-server
  serviceName: nomad-server
  replicas: 1
  template:
    metadata:
      labels:
        app: nomad-server
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nomad
        image: hashicorp/nomad:1.6.3
        args: ['agent', '-config', '/var/nomad-server/config/nomad.hcl', '-datacenter', '{{ .Values.datacenter }}', '-region', '{{ .Values.region }}']
        ports:
        - name: http
          containerPort: 4646
          protocol: 'TCP'
        - name: rpc
          containerPort: 4647
          protocol: 'TCP'
        - name: serf-tcp
          containerPort: 4648
          protocol: 'TCP'
        - name: serf-udp
          containerPort: 4648
          protocol: 'UDP'
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: '1'
            memory: 512Mi
        volumeMounts:
        - name: nomad-server-config
          mountPath: /etc/nomad-server/config
          readOnly: true
        - name: nomad-server-tls
          mountPath: /etc/nomad-server/certs
          readOnly: true
        - name: nomad-server-data
          mountPath: /var/nomad-server/data
    volumes:
    - name: nomad-server-config
      configMap:
        name: nomad-server-config
    - name: nomad-server-tls
      secret:
        secretName: nomad-server-tls
  volumeClaimTemplates:
  - metadata:
      name: nomad-server-data
    spec:
      accessModes: ['ReadWriteOnce']
      storageClassName: standard
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: nomad-server
  labels:
    name: nomad-server
spec:
  ports:
  - name: http
    port: 4646
    protocol: 'TCP'
  - name: rpc
    port: 4647
    protocol: 'TCP'
  selector:
    app: nomad-server