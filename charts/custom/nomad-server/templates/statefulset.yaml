apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nomad-server
spec:
  serviceName: nomad-server
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: nomad-server
  template:
    metadata:
      labels:
        app: nomad-server
    spec:
      serviceAccountName: nomad-server
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - nomad-server
      #       topologyKey: kubernetes.io/hostname
      containers:
      - name: nomad-server
        image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
        args:
        - 'agent'
        - '-retry-join=nomad-server.$(NAMESPACE).svc.cluster.local'
        - '-config=/etc/nomad/nomad.d/server.hcl'
        - '-encrypt=$(GOSSIP_ENCRYPTION_KEY)'
        env:
        - name: NOMAD_SKIP_DOCKER_IMAGE_WARN
          value: 'true'
        - name: GOSSIP_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: nomad-server-gossip-encryption-key
              key: data
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 4646
          protocol: 'TCP'
        - name: rpc
          containerPort: 4647
          protocol: 'TCP'
        - name: serf-tcp
          containerPort: 4648
          protocol: 'TCP'
        - name: serf-udp
          containerPort: 4648
          protocol: 'UDP'
        resources:
          requests:
            cpu: '500m'
            memory: '1Gi'
        volumeMounts:
        - name: nomad-server-config
          mountPath: /etc/nomad/nomad.d
        - name: nomad-server-data
          mountPath: /var/lib/nomad
        - name: nomad-server-tls
          mountPath: /etc/nomad/tls
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1000
      volumes:
      - name: nomad-server-config
        configMap:
          name: nomad-server-config
      - name: nomad-server-tls
        secret:
          secretName: nomad-server-tls-certs
  volumeClaimTemplates:
  - metadata:
      name: nomad-server-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
